import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.lang.reflect.Array;
import java.util.ArrayList;

import javax.swing.Action;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JPopupMenu;
import javax.swing.JRadioButton;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.JWindow;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import javax.swing.AbstractCellEditor;
import java.awt.Component;

class main {

 public static void main(String[] args) {
  new Test();
 }

}

class Test extends JFrame implements ActionListener {
 JButton btn1 = null;
 JButton btn2 = null;
 JButton btn3 = null;
 JButton btn4 = null;
 JButton btn5 = null;
 JTable table = null;


 public Test() {
  super("문제");
  this.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
  this.setBounds(200, 200, 700, 500);
  this.setLayout(new FlowLayout());

  JPanel panelTable = new JPanel();
  JPanel panelNormal = new JPanel();

  panelTable.setLayout(new FlowLayout());
  panelNormal.setLayout(new FlowLayout());

  // panelTable
  String title[] = new String[5];
  title[0] = "학생 이름";
  title[1] = "학생 과목";
  title[2] = "학생 학점";
  title[3] = "학점 상호 인정";
  title[4] = "개설 강좌 정보";
  String data[][] = new String[0][0];


  table = new JTable(data, title);
  JScrollPane sp = new JScrollPane(table);
  sp.setPreferredSize(new Dimension(500, 200));

  panelTable.add(sp);

  // panelNormal
  btn1 = new JButton("과목 및 학점 입력");
  btn1.addActionListener(this);
  panelNormal.add(btn1);
  
  btn2 = new JButton("정보 삭제");
  btn2.addActionListener(this);
  panelNormal.add(btn2);
  
  btn3 = new JButton("정보 조회");
  btn3.addActionListener(this);
  panelNormal.add(btn3);



  btn4 = new JButton("학점 상호 인정 조회");
  btn4.addActionListener(this);
  panelNormal.add(btn4);
  
  btn5 = new JButton("개설 강좌 정보 조회");
  btn5.addActionListener(this);
  panelNormal.add(btn5);


  this.add(panelTable);
  this.add(panelNormal);

  this.setVisible(true);
 }
 
 public void refreshTable() {
	 
	
	
	 
	  String titleTemp[] = new String[5];
	  titleTemp[0] = "학생 이름";
	  titleTemp[1] = "학생 과목";
	  titleTemp[2] = "학생 학점";
	  titleTemp[3] = "학점 상호 인정";
	  titleTemp[4] = "개설 강좌 정보";

	  int size = StuManager.list.size();
	  Object[][] dataStudentArray = new Object[size][5];

	  for (int i = 0; i < size; i++) {
		  Student dataStudent = StuManager.list.get(i);

	        dataStudentArray[i][0] = dataStudent.name;
	        dataStudentArray[i][1] = dataStudent.subject;
	        dataStudentArray[i][2] = dataStudent.grade;

	        JButton btnMutualSubject = new JButton("학점 상호 인정 조회");
	        JButton btnCourseInformation = new JButton("개설 강좌 정보 조회");

	        btnMutualSubject.addActionListener(this);
	        btnCourseInformation.addActionListener(this);
	        
	        table.getColumnModel().getColumn(5).setCellRenderer(new TableCell());
            table.getColumnModel().getColumn(5).setCellEditor(new TableCell());

	        dataStudentArray[i][3] = btnMutualSubject;
	        dataStudentArray[i][4] = btnCourseInformation;
	   
	  }

	  table.setModel(new DefaultTableModel(dataStudentArray, titleTemp));
}
 
 class TableCell extends AbstractCellEditor implements TableCellEditor, TableCellRenderer{
	 
     JButton jb;
      
     public TableCell() {
         // TODO Auto-generated constructor stub
         jb = new JButton("학점 상호 인정 조회");
          
         jb.addActionListener(e -> {
             jb.addActionListener(new SearchMutualSubject());
         });
      
     }
      
     @Override
     public Object getCellEditorValue() {
         // TODO Auto-generated method stub
         return null;
     }
     @Override
     public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus,
             int row, int column) {
         // TODO Auto-generated method stub
         return jb;
     }
     @Override
     public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row,
             int column) {
         // TODO Auto-generated method stub
         return jb;
     }
      
 }



 @Override
 public void actionPerformed(ActionEvent e) {

  if (e.getSource() == btn1) {
	  new InputSubject();
  }
  
  if (e.getSource() == btn2) {
	   if (table.getSelectedRow() == -1) {
	   } else {
	    int deleteIndex = table.getSelectedRow();

	    StuManager.list.remove(deleteIndex);
	    this.refreshTable();
	   }
	}
  
  if (e.getSource() == btn3) {
	   String titleTemp[] = new String[5];
	   titleTemp[0] = "학생 이름";
	   titleTemp[1] = "학생 과목";
	   titleTemp[2] = "학생 성적";
	   titleTemp[3] = "학점 상호 인정";
	   titleTemp[4] = "개설 강좌 정보";

	   int size = StuManager.list.size();
	   String[][] dataStudentArray = new String[size][5];

	   for (int i = 0; i < size; i++) {
	    Student dataStudent = StuManager.list.get(i);

	    dataStudentArray[i][0] = dataStudent.name;
	    dataStudentArray[i][1] = dataStudent.subject;
	    dataStudentArray[i][2] = dataStudent.grade;
	    dataStudentArray[i][3] = dataStudent.grade;
	    dataStudentArray[i][4] = dataStudent.grade;
	   }

	   table.setModel(new DefaultTableModel(dataStudentArray, titleTemp));
	  }

  if (e.getSource() == btn4) {
	  new SearchMutualSubject();
  }
  if (e.getSource() == btn5) {
	  new SearchCourseInformation();
  }

 }

}


class InputSubject extends JFrame implements ActionListener {
	
  JButton btnOk, btnClose;
  JLabel name, subject, grade;
  JTextField tv_name, tv_subject, tv_grade;


 public InputSubject() {
  super("과목 및 학점 입력");
  this.setBounds(200, 200, 250, 300);
  this.setLayout(new FlowLayout());
  
  
  JPanel panelName = new JPanel();
  JPanel panelSubject = new JPanel();
  JPanel panelGrade = new JPanel();
  JPanel panelButton = new JPanel();
  
  panelName.setLayout(new FlowLayout());
  panelButton.setLayout(new FlowLayout());
  
  name = new JLabel("이름 : ");
  subject = new JLabel("과목 : ");
  grade = new JLabel("학점 : ");
  tv_name = new JTextField(10);
  tv_subject = new JTextField(10);
  tv_grade = new JTextField(10);
  
  btnOk = new JButton("확인");
  btnClose = new JButton("취소");
  
  btnOk.addActionListener(this);
  btnClose.addActionListener(this);
  
  panelName.add(name);
  panelName.add(tv_name);
  
  panelSubject.add(subject);
  panelSubject.add(tv_subject);
  
  panelGrade.add(grade);
  panelGrade.add(tv_grade);
  
  panelButton.add(btnOk);
  panelButton.add(btnClose);
  
  this.add(panelName);
  this.add(panelSubject);
  this.add(panelGrade);
  this.add(panelButton, BorderLayout.SOUTH);


  this.setVisible(true);
 }

 @Override
 public void actionPerformed(ActionEvent e) {
	 if(e.getSource() == btnOk) {
		 Student student = new Student(tv_name.getText().toString().trim(), tv_subject.getText().toString().trim(),tv_grade.getText().toString().trim(),"","");
		 
		 StuManager.list.add(student);
		 tv_name.setText(null);
		 tv_subject.setText(null);
		 tv_grade.setText(null);
	 }
	 if (e.getSource() == btnClose) {
		   dispose();
	 }
	 
 }

}

class SearchMutualSubject extends JFrame implements ActionListener {
 public SearchMutualSubject() {
  super("상호 인정 과목 조회");

  this.setBounds(200, 200, 250, 300);
  this.setLayout(new FlowLayout());


  this.setVisible(true);

 }

 @Override
 public void actionPerformed(ActionEvent e) {

 }

}


class SearchCourseInformation extends JFrame implements ActionListener {
	 public SearchCourseInformation() {
	  super("개설 강좌 정보 조회");

	  this.setBounds(200, 200, 250, 300);
	  this.setLayout(new FlowLayout());


	  this.setVisible(true);

	 }

	 @Override
	 public void actionPerformed(ActionEvent e) {

	 }

}

class Student {
	 String name;
	 String subject;
	 String grade;
	 String mutualSubject;
	 String courseInformation;

	 public Student(String name, String subject, String grade, String mutualSubject,String courseInformation) {
	  this.name = name;
	  this.subject = subject;
	  this.grade = grade;
	  this.mutualSubject = mutualSubject;
	  this.courseInformation = courseInformation;
	}
}

class StuManager {
	 public static ArrayList<Student> list = new ArrayList<Student>();
}


